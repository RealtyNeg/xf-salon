function createCalendar(a, b, f) {
    function h() { var g = document.createElement('div'); g.className += 'cld-sidebar'; var h = document.createElement('ul'); h.className += 'cld-monthList'; for (var d = 0; d < e.length - 3; d++){ var c = document.createElement('li'); c.className += 'cld-month'; var f = d - (4 - a.Selected.Month); if (f < 0 ? f += 12 : f > 11 && (f -= 12), d == 0) c.className += ' cld-rwd cld-nav', c.addEventListener('click', function () { typeof a.Options.ModelChange == 'function' ? a.Model = a.Options.ModelChange() : a.Model = a.Options.ModelChange, createCalendar(a, b, -1); }), c.innerHTML += '<svg height="15" width="15" viewBox="0 0 100 75" fill="rgba(255,255,255,0.5)"><polyline points="0,75 100,75 50,0"></polyline></svg>'; else if (d == e.length - 4) c.className += ' cld-fwd cld-nav', c.addEventListener('click', function () { typeof a.Options.ModelChange == 'function' ? a.Model = a.Options.ModelChange() : a.Model = a.Options.ModelChange, createCalendar(a, b, 1); }), c.innerHTML += '<svg height="15" width="15" viewBox="0 0 100 75" fill="rgba(255,255,255,0.5)"><polyline points="0,0 100,0 50,75"></polyline></svg>'; else if (d < 4 ? c.className += ' cld-pre' : d > 4 ? c.className += ' cld-post' : c.className += ' cld-curr', function (g) { g = d - 4, c.addEventListener('click', function () { typeof a.Options.ModelChange == 'function' ? a.Model = a.Options.ModelChange() : a.Model = a.Options.ModelChange, createCalendar(a, b, g); }), c.setAttribute('style', 'opacity:' + (1 - Math.abs(g) / 4)), c.innerHTML += e[f].substr(0, 3); }(), f == 0) { var i = document.createElement('li'); i.className += 'cld-year', d < 5 ? i.innerHTML += a.Selected.Year : i.innerHTML += a.Selected.Year + 1, h.appendChild(i); } h.appendChild(c); } g.appendChild(h), a.Options.NavLocation ? (document.getElementById(a.Options.NavLocation).innerHTML = '', document.getElementById(a.Options.NavLocation).appendChild(g)) : b.appendChild(g); } function i() { var d = document.createElement('div'); if (d.className += 'cld-datetime', a.Options.NavShow && !a.Options.NavVertical) { var f = document.createElement('div'); f.className += ' cld-rwd cld-nav', f.addEventListener('click', function () { createCalendar(a, b, -1); }), f.innerHTML = '<svg height="15" width="15" viewBox="0 0 75 100" fill="rgba(0,0,0,0.5)"><polyline points="0,50 75,0 75,100"></polyline></svg>', d.appendChild(f); } var h = document.createElement('div'); if (h.className += ' today', h.innerHTML = e[a.Selected.Month] + ', ' + a.Selected.Year, d.appendChild(h), a.Options.NavShow && !a.Options.NavVertical) { var g = document.createElement('div'); g.className += ' cld-fwd cld-nav', g.addEventListener('click', function () { createCalendar(a, b, 1); }), g.innerHTML = '<svg height="15" width="15" viewBox="0 0 75 100" fill="rgba(0,0,0,0.5)"><polyline points="0,0 75,50 0,100"></polyline></svg>', d.appendChild(g); } a.Options.DatetimeLocation ? (document.getElementById(a.Options.DatetimeLocation).innerHTML = '', document.getElementById(a.Options.DatetimeLocation).appendChild(d)) : c.appendChild(d); } function j() { var a = document.createElement('ul'); a.className = 'cld-labels'; var e = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']; for (var b = 0; b < e.length; b++){ var d = document.createElement('li'); d.className += 'cld-label', d.innerHTML = e[b], a.appendChild(d); } c.appendChild(a); } function k() {
        function n(b) { var a = document.createElement('p'); return a.className += 'cld-number', a.innerHTML += b, a; } var h = document.createElement('ul'); h.className += 'cld-days'; for (var d = 0; d < a.Selected.FirstDay; d++){ var b = document.createElement('li'); b.className += 'cld-day prevMonth'; var i = d % 7; for (var e = 0; e < a.Options.DisabledDays.length; e++)i == a.Options.DisabledDays[e] && (b.className += ' disableDay'); var g = n(a.Prev.Days - a.Selected.FirstDay + (d + 1)); b.appendChild(g), h.appendChild(b); } for (var d = 0; d < a.Selected.Days; d++){
            var b = document.createElement('li'); b.className += 'cld-day currMonth'; var i = (d + a.Selected.FirstDay) % 7; for (var e = 0; e < a.Options.DisabledDays.length; e++)i == a.Options.DisabledDays[e] && (b.className += ' disableDay'); var g = n(d + 1); for (var f = 0; f < a.Model.length; f++){
                var o = new Date(a.Model[f].Date); var p = new Date(a.Selected.Year, a.Selected.Month, d + 1);
                if (o.getDate() == p.getDate() && o.getMonth() == p.getMonth() && o.getFullYear() == p.getFullYear())
                { g.className += ' eventday'; var k = document.createElement('span'); if (k.className += 'cld-title', typeof a.Model[f].Link == 'function' || a.Options.EventClick) { var j = document.createElement('a'); if (j.setAttribute('href', '#'), j.innerHTML += a.Model[f].Title, a.Options.EventClick) { var l = a.Model[f].Link; typeof a.Model[f].Link != 'string' ? (j.addEventListener('click', a.Options.EventClick.bind.apply(a.Options.EventClick, [null].concat(l))), a.Options.EventTargetWholeDay && (b.className += ' clickable', b.addEventListener('click', a.Options.EventClick.bind.apply(a.Options.EventClick, [null].concat(l))))) : (j.addEventListener('click', a.Options.EventClick.bind(null, l)), a.Options.EventTargetWholeDay && (b.className += ' clickable', b.addEventListener('click', a.Options.EventClick.bind(null, l)))); } else j.addEventListener('click', a.Model[f].Link), a.Options.EventTargetWholeDay && (b.className += ' clickable', b.addEventListener('click', a.Model[f].Link)); k.appendChild(j); } else k.innerHTML += '<a href="' + a.Model[f].Link + '">' + a.Model[f].Title + '</a>'; g.appendChild(k); }
            } b.appendChild(g), d + 1 == a.Today.getDate() && a.Selected.Month == a.Today.Month && a.Selected.Year == a.Today.Year && (b.className += ' today'), h.appendChild(b);
        } var m = 13; h.children.length > 35 ? m = 6 : h.children.length < 29 && (m = 20); for (var d = 0; d < m - a.Selected.LastDay; d++){ var b = document.createElement('li'); b.className += 'cld-day nextMonth'; var i = (d + a.Selected.LastDay + 1) % 7; for (var e = 0; e < a.Options.DisabledDays.length; e++)i == a.Options.DisabledDays[e] && (b.className += ' disableDay'); var g = n(d + 1); b.appendChild(g), h.appendChild(b); } c.appendChild(h);
    } if (f !== void 0) { var g = new Date(a.Selected.Year, a.Selected.Month + f, 1); a = new Calendar(a.Model, a.Options, g), b.innerHTML = ''; } else for (var d in a.Options) typeof a.Options[d] != 'function' && typeof a.Options[d] != 'object' && a.Options[d] ? b.className += ' ' + d + '-' + a.Options[d] : 0; var e = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
    var c = document.createElement('div'); c.className += 'cld-main', a.Options.Color && (c.innerHTML += '<style>.cld-main{color:' + a.Options.Color + ';}</style>'), a.Options.LinkColor && (c.innerHTML += '<style>.cld-title a{color:' + a.Options.LinkColor + ';}</style>'), b.appendChild(c), a.Options.NavShow && a.Options.NavVertical && h(), a.Options.DateTimeShow && i(), j(), k();
} function caleandar(b, c, d) { var a = new Calendar(c, d); createCalendar(a, b); } var Calendar = function (c, b, d) { this.Options = { Color: '', LinkColor: '', NavShow: !0, NavVertical: !1, NavLocation: '', DateTimeShow: !0, DateTimeFormat: 'mmm, yyyy', DatetimeLocation: '', EventClick: '', EventTargetWholeDay: !1, DisabledDays: [], ModelChange: c }; for (var a in b) this.Options[a] = typeof b[a] == 'string' ? b[a].toLowerCase() : b[a]; c ? this.Model = c : this.Model = {}, this.Today = new Date(), this.Selected = this.Today, this.Today.Month = this.Today.getMonth(), this.Today.Year = this.Today.getFullYear(), d && (this.Selected = d), this.Selected.Month = this.Selected.getMonth(), this.Selected.Year = this.Selected.getFullYear(), this.Selected.Days = new Date(this.Selected.Year, this.Selected.Month + 1, 0).getDate(), this.Selected.FirstDay = new Date(this.Selected.Year, this.Selected.Month, 1).getDay(), this.Selected.LastDay = new Date(this.Selected.Year, this.Selected.Month + 1, 0).getDay(), this.Prev = new Date(this.Selected.Year, this.Selected.Month - 1, 1), this.Selected.Month == 0 && (this.Prev = new Date(this.Selected.Year - 1, 11, 1)), this.Prev.Days = new Date(this.Prev.getFullYear(), this.Prev.getMonth() + 1, 0).getDate(); };